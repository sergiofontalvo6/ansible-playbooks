---
- name: Verificar y aplicar actualizaciones de seguridad (Ubuntu y AlmaLinux)
  hosts: all
  become: true
  gather_facts: yes

  vars:
    instalar_actualizaciones_ubuntu: "no"
    instalar_actualizaciones_almalinux: "no"

  tasks:

    # Validaciones
    - name: Validar valor de instalar_actualizaciones_ubuntu
      fail:
        msg: "Valor inválido para instalar_actualizaciones_ubuntu (usa 'si' o 'no')"
      when: instalar_actualizaciones_ubuntu not in ["si", "no"]

    - name: Validar valor de instalar_actualizaciones_almalinux
      fail:
        msg: "Valor inválido para instalar_actualizaciones_almalinux (usa 'si' o 'no')"
      when: instalar_actualizaciones_almalinux not in ["si", "no"]

    # --------------------
    # Ubuntu
    # --------------------
    - name: Verificar actualizaciones de seguridad en Ubuntu
      shell: unattended-upgrade --dry-run -d | grep -E '^Inst' | grep security || true
      register: ubuntu_security_updates
      changed_when: false
      failed_when: false
      when: ansible_facts['os_family'] == "Debian"
      
    - name: Mostrar resumen de actualizaciones de seguridad en Ubuntu
      debug:
        msg: >-
          {% if ubuntu_security_updates.stdout_lines | length > 0 %}
          Se encontraron {{ ubuntu_security_updates.stdout_lines | length }} actualizaciones de seguridad:
          {{ ubuntu_security_updates.stdout_lines[:10] }}
          {% else %}
          No se encontraron actualizaciones de seguridad en Ubuntu.
          {% endif %}
      when: ansible_facts['os_family'] == "Debian"


    - name: Confirmar finalización del análisis
      debug:
        msg: "Verificación de actualizaciones de seguridad en Ubuntu terminada."
      when: ansible_facts['os_family'] == "Debian"

    - name: Aplicar actualizaciones de seguridad en Ubuntu
      apt:
        upgrade: dist
        update_cache: yes
      when:
        - ansible_facts['os_family'] == "Debian"
        - instalar_actualizaciones_ubuntu == "si"

    - name: Requiere reinicio
      stat:
        path: /var/run/reboot-required
      register: ubuntu_reboot_check
      when: ansible_facts['os_family'] == "Debian"

    - name: Requiere reinicio
      debug:
        msg: "Ubuntu requiere reinicio"
      when:
        - ansible_facts['os_family'] == "Debian"
        - ubuntu_reboot_check.stat.exists

    - name: Requiere reinicio
      debug:
        msg: "Ubuntu no requiere reinicio"
      when:
        - ansible_facts['os_family'] == "Debian"
        - not ubuntu_reboot_check.stat.exists

    # --------------------
    # AlmaLinux
    # --------------------
    - name: Asegurar que dnf-plugin-security esté instalado
      package:
        name: dnf-plugins-core
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    - name: Refrescar caché de DNF
      shell: dnf clean all && dnf makecache --refresh
      changed_when: false
      when: ansible_facts['os_family'] == "RedHat"

    - name: Verificar actualizaciones de seguridad en AlmaLinux
      shell: dnf updateinfo list security
      register: almalinux_security_updates
      changed_when: false
      async: 120
      poll: 10
      when: ansible_facts['os_family'] == "RedHat"

    - name: Guardar resumen de actualizaciones
      set_fact:
        resumen_almalinux: "{{ almalinux_security_updates.stdout_lines | select('match', '^ALSA') | list }}"
      when: ansible_facts['os_family'] == "RedHat"

    - name: Mostrar resumen de actualizaciones de seguridad (máx. 10 líneas)
      debug:
        msg: "{{ resumen_almalinux[:10] }}"
      when: ansible_facts['os_family'] == "RedHat"

    - name: Confirmar finalización del análisis
      debug:
        msg: "Verificación de actualizaciones de seguridad en AlmaLinux terminada."
      when: ansible_facts['os_family'] == "RedHat"  
  
    - name: Aplicar actualizaciones de seguridad
      shell: dnf update --security -y
      when:
        - ansible_facts['os_family'] == "RedHat"
        - instalar_actualizaciones_almalinux == "si"

    - name: Verificar si AlmaLinux requiere reinicio
      shell: needs-restarting -r; echo $?
      register: almalinux_reboot_check
      changed_when: false
      when: ansible_facts['os_family'] == "RedHat"

    - name: Requiere reinicio
      debug:
        msg: "AlmaLinux requiere reinicio"
      when:
        - ansible_facts['os_family'] == "RedHat"
        - almalinux_reboot_check.stdout != "0"

    - name: Requiere reinicio
      debug:
        msg: "AlmaLinux no requiere reinicio"
      when:
        - ansible_facts['os_family'] == "RedHat"
        - almalinux_reboot_check.stdout == "0"
